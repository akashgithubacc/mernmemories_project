{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from \"../constants/actionTypes\";\n\n//here state is posts and its initial value is  []\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload.data\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","reducer","state","arguments","length","undefined","action","type","posts","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"sources":["C:/Users/deepa/OneDrive/Desktop/Complete Web Development/memories_project/client/src/reducers/posts.js"],"sourcesContent":["import {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n  FETCH_BY_SEARCH,\r\n} from \"../constants/actionTypes\";\r\n\r\n//here state is posts and its initial value is  []\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_BY_SEARCH:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n      };\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n\r\n    case CREATE:\r\n      return [...posts, action.payload];\r\n\r\n    case UPDATE:\r\n    case LIKE:\r\n      return posts.map((post) =>\r\n        post._id === action.payload._id ? action.payload : post\r\n      );\r\n\r\n    case DELETE:\r\n      return posts.filter((post) => post._id !== action.payload);\r\n\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,eAAe,QACV,0BAA0B;;AAEjC;;AAEA,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACjC,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKP,eAAe;MAClB,OAAO;QACL,GAAGE,KAAK;QACRM,KAAK,EAAEF,MAAM,CAACG,OAAO,CAACC;MACxB,CAAC;IACH,KAAKf,SAAS;MACZ,OAAO;QACL,GAAGO,KAAK;QACRM,KAAK,EAAEF,MAAM,CAACG,OAAO,CAACC,IAAI;QAC1BC,WAAW,EAAEL,MAAM,CAACG,OAAO,CAACE,WAAW;QACvCC,aAAa,EAAEN,MAAM,CAACG,OAAO,CAACG;MAChC,CAAC;IAEH,KAAKhB,MAAM;MACT,OAAO,CAAC,GAAGY,KAAK,EAAEF,MAAM,CAACG,OAAO,CAAC;IAEnC,KAAKZ,MAAM;IACX,KAAKE,IAAI;MACP,OAAOS,KAAK,CAACK,GAAG,CAAEC,IAAI,IACpBA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CAACM,GAAG,GAAGT,MAAM,CAACG,OAAO,GAAGK,IACrD,CAAC;IAEH,KAAKhB,MAAM;MACT,OAAOU,KAAK,CAACQ,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,MAAM,CAACG,OAAO,CAAC;IAE5D;MACE,OAAOD,KAAK;EAChB;AACF,CAAC;AAED,eAAeP,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}