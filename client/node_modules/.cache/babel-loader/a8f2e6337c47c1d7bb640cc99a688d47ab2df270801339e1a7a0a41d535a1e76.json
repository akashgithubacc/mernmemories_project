{"ast":null,"code":"import * as api from \"../api\";\nimport { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from \"../constants/actionTypes\";\n//Action Creators\n\n// here, to fetch all the data from the api, it is going to be an\n// asynchronized functions, so we have to use thunk here to use async\n// thunk allows us to do async(dispatch)\n// and as we have used redux thunk, so instead of returning action in\n// fetchPosts we need to do dispatch(action) instead of return action\n\nexport const getPosts = page => async dispatch => {\n  try {\n    // to catch all the data from the backend api\n\n    const {\n      data\n    } = await api.fetchPosts(page);\n\n    // so as dispatch takes action as an input and\n    // action has a type and a payload,  so\n\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","getPosts","page","dispatch","data","fetchPosts","type","payload","error","console","log","getPostBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/deepa/OneDrive/Desktop/Complete Web Development/memories_project/client/src/actions/posts.js"],"sourcesContent":["import * as api from \"../api\";\r\nimport {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n  FETCH_BY_SEARCH,\r\n} from \"../constants/actionTypes\";\r\n//Action Creators\r\n\r\n// here, to fetch all the data from the api, it is going to be an\r\n// asynchronized functions, so we have to use thunk here to use async\r\n// thunk allows us to do async(dispatch)\r\n// and as we have used redux thunk, so instead of returning action in\r\n// fetchPosts we need to do dispatch(action) instead of return action\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    // to catch all the data from the backend api\r\n\r\n    const { data } = await api.fetchPosts(page);\r\n\r\n    // so as dispatch takes action as an input and\r\n    // action has a type and a payload,  so\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    const {\r\n      data: { data },\r\n    } = await api.fetchPostsBySearch(searchQuery);\r\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,SACEC,SAAS,EACTC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,IAAI,EACJC,eAAe,QACV,0BAA0B;AACjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF;;IAEA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACW,UAAU,CAACH,IAAI,CAAC;;IAE3C;IACA;;IAEAC,QAAQ,CAAC;MAAEG,IAAI,EAAEX,SAAS;MAAEY,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,eAAe,GAAIC,WAAW,IAAK,MAAOT,QAAQ,IAAK;EAClE,IAAI;IACF,MAAM;MACJC,IAAI,EAAE;QAAEA;MAAK;IACf,CAAC,GAAG,MAAMV,GAAG,CAACmB,kBAAkB,CAACD,WAAW,CAAC;IAC7CT,QAAQ,CAAC;MAAEG,IAAI,EAAEN,eAAe;MAAEO,OAAO,EAAEH;IAAK,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIC,IAAI,IAAK,MAAOZ,QAAQ,IAAK;EACtD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACoB,UAAU,CAACC,IAAI,CAAC;IAE3CZ,QAAQ,CAAC;MAAEG,IAAI,EAAEV,MAAM;MAAEW,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAGA,CAACC,EAAE,EAAEF,IAAI,KAAK,MAAOZ,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACsB,UAAU,CAACC,EAAE,EAAEF,IAAI,CAAC;IAE/CZ,QAAQ,CAAC;MAAEG,IAAI,EAAET,MAAM;MAAEU,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMU,UAAU,GAAID,EAAE,IAAK,MAAOd,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMT,GAAG,CAACwB,UAAU,CAACD,EAAE,CAAC;IAExBd,QAAQ,CAAC;MAAEG,IAAI,EAAER,MAAM;MAAES,OAAO,EAAEU;IAAG,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMW,QAAQ,GAAIF,EAAE,IAAK,MAAOd,QAAQ,IAAK;EAClD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACyB,QAAQ,CAACF,EAAE,CAAC;IAEvCd,QAAQ,CAAC;MAAEG,IAAI,EAAEP,IAAI;MAAEQ,OAAO,EAAEH;IAAK,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}