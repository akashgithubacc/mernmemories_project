{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deepa\\\\OneDrive\\\\Desktop\\\\Complete Web Development\\\\memories_project\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId,\n    isLoggedIn\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => state.posts\n  //currentId ? state.posts.find((p) => p._id === currentId) : null\n  );\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  //console.log(isLoggedIn);\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n    clear();\n  };\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n  return isLoggedIn === false ? /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Please Sign in For Creating a Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        required: true\n        //So This is very Important\n        // Here\n        // OnChnage function is taking an evenet e as an params\n        // and it is updating the postData object from the useState\n        // postData contains all the data or the post data of the\n        // post to be made by the creator\n        // So setPostData includes the previous postData values\n        // and updates only that postData object property\n        // which is specified in value by creator : e.target.value\n        // ie creator property of postData is changed to e.t.value\n        ,\n        onChange: e => setPostData({\n          ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        required: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        required: true,\n        multiline: true,\n        rows: 6,\n        maxRows: 10,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags ( Separated by Commas )\",\n        fullWidth: true,\n        required: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(\",\")\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({\n              ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        size: \"large\",\n        fullWidth: true,\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: clear,\n        size: \"small\",\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"ieMzQ3YWn3ytJlPXQCLNqqf6ynE=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","createPost","updatePost","useSelector","jsxDEV","_jsxDEV","Form","_ref","_s","currentId","setCurrentId","isLoggedIn","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","classes","dispatch","handleSubmit","e","preventDefault","clear","className","paper","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","noValidate","root","form","onSubmit","name","label","fullWidth","value","required","onChange","target","multiline","rows","maxRows","split","fileInput","type","multiple","onDone","_ref2","base64","buttonSubmit","color","size","style","marginBottom","onClick","_c","$RefreshReg$"],"sources":["C:/Users/deepa/OneDrive/Desktop/Complete Web Development/memories_project/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Form = ({ currentId, setCurrentId, isLoggedIn }) => {\r\n  const [postData, setPostData] = useState({\r\n    creator: \"\",\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: \"\",\r\n    selectedFile: \"\",\r\n  });\r\n\r\n  const post = useSelector(\r\n    (state) => state.posts\r\n    //currentId ? state.posts.find((p) => p._id === currentId) : null\r\n  );\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //console.log(isLoggedIn);\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {\r\n      dispatch(createPost(postData));\r\n    }\r\n    clear();\r\n  };\r\n\r\n  const clear = () => {\r\n    setCurrentId(null);\r\n    setPostData({\r\n      creator: \"\",\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: \"\",\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  return isLoggedIn === false ? (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h6\">Please Sign in For Creating a Memory</Typography>\r\n    </Paper>\r\n  ) : (\r\n    <Paper className={classes.paper}>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {\" \"}\r\n          {currentId ? `Editing \"${post.title}\"` : \"Creating a Memory\"}\r\n        </Typography>\r\n        <TextField\r\n          name=\"creator\"\r\n          variant=\"outlined\"\r\n          label=\"Creator\"\r\n          fullWidth\r\n          value={postData.creator}\r\n          required\r\n          //So This is very Important\r\n          // Here\r\n          // OnChnage function is taking an evenet e as an params\r\n          // and it is updating the postData object from the useState\r\n          // postData contains all the data or the post data of the\r\n          // post to be made by the creator\r\n          // So setPostData includes the previous postData values\r\n          // and updates only that postData object property\r\n          // which is specified in value by creator : e.target.value\r\n          // ie creator property of postData is changed to e.t.value\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, creator: e.target.value })\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          required\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          required\r\n          multiline\r\n          rows={6}\r\n          maxRows={10}\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags ( Separated by Commas )\"\r\n          fullWidth\r\n          required\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          size=\"large\"\r\n          fullWidth\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          Submit\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={clear}\r\n          size=\"small\"\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}